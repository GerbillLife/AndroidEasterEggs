name: Build Release CI

on:
  push:
    tags:
      - 'v*'

jobs:
  github-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Retrieve the secret and decode it to a file
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEY_PROPERTIES_BASE64: ${{ secrets.KEY_PROPERTIES_BASE64 }}
        run: |
          echo "$KEY_PROPERTIES_BASE64" | base64 --decode > key.properties
          echo "$KEYSTORE_BASE64" | base64 --decode > keystore.jks

      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew clean app:assembleRelease

      - name: Get Change logs
        id: get_changelogs
        run: |
          CHANGE_LOG_FILE=`ls -r fastlane/metadata/android/en-US/changelogs | head -1`
          CHANGE_LOG_CONTENT=`cat fastlane/metadata/android/en-US/changelogs/$CHANGE_LOG_FILE`
          echo "CHANGE_LOG_FILE=$CHANGE_LOG_FILE" >> "$GITHUB_OUTPUT"
          echo "CHANGE_LOG_CONTENT=$CHANGE_LOG_CONTENT" >> "$GITHUB_OUTPUT"

      - name: Create Github Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          bodyFile: fastlane/metadata/android/en-US/changelogs/${{ steps.get_changelogs.outputs.CHANGE_LOG_FILE }}
          artifacts: app/build/outputs/apk/*/*.apk,app/build/outputs/mapping/*/mapping.txt
          artifactContentType: application/vnd.android.package-archive
          draft: false
          prerelease: false
          allowUpdates: true
          updateOnlyUnreleased: true
          replacesArtifacts: true

      - name: Send Telegram message
        env:
          TELEGRAM_TO: ${{ secrets.TELEGRAM_TO}}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        if: ${{ env.TELEGRAM_TO != '' && env.TELEGRAM_TOKEN != ''}}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: 'markdown'
          photo: 'https://raw.githubusercontent.com/hushenghao/AndroidEasterEggs/main/fastlane/metadata/android/en-US/images/featureGraphic.png'
          message: |
            *Easter Eggs*
            
            🚀 New Release Version ! 🎉
            
            *❇️ Changelogs:*
            
            ${{ steps.get_changelogs.outputs.CHANGE_LOG_CONTENT }}
            
            *🔗 Links:*
            
            - ⬇️ [Download](${{ steps.create_release.outputs.html_url }})
            - 🐙 [Source Code](https://github.com/hushenghao/AndroidEasterEggs)

  play-store:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: gradle

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true

    - name: Retrieve the secret and decode it to a file
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        KEY_PROPERTIES_BASE64: ${{ secrets.KEY_PROPERTIES_BASE64 }}
        JSON_KEY_FILE_BASE64: ${{ secrets.JSON_KEY_FILE_BASE64 }}
      run: |
        echo "$KEY_PROPERTIES_BASE64" | base64 --decode > key.properties
        echo "$KEYSTORE_BASE64" | base64 --decode > keystore.jks
        echo "$JSON_KEY_FILE_BASE64" | base64 --decode > json_key_file.json

    - name: Deploy to the Google Play
      env:
        JSON_KEY_FILE: 'json_key_file.json'
        JSON_KEY_FILE_BASE64: ${{ secrets.JSON_KEY_FILE_BASE64 }}
      if: ${{ env.JSON_KEY_FILE_BASE64 != '' }}
      run: |
        bundle install 
        bundle exec fastlane install_plugins
        bundle exec fastlane deploy
